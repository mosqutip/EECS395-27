digraph G {
  rankdir=TB;
  node [style=filled];
  7 [shape=box, fillcolor="#FFEFD5", label="Decl argc"];
  8 [shape=box, fillcolor="#6495ED", label="In1"];
  9 [shape=box, fillcolor="#FFEFD5", label="Decl argv"];
  10 [shape=box, fillcolor="#6495ED", label="In2"];
  11 [shape=box, fillcolor="#FFEFD5", label="Decl x"];
  12 [shape=box, fillcolor="#FFEFD5", label="Decl y"];
  13 [shape=box, fillcolor="#FFEFD5", label="Decl z"];
  15 [shape=box, fillcolor="#FFCA6E", label="In1"];
  16 [shape=box, fillcolor="#FFCA6E", label="OutRet"];
  18 [shape=box, fillcolor="#FFCA6E", label="In1"];
  19 [shape=box, fillcolor="#FFCA6E", label="OutRet"];
  20 [shape=diamond, fillcolor="#CCCCCC", label="x == 0"];
  21 [shape=box, fillcolor="#CCCCCC", label="return z;"];
  22 [shape=box, fillcolor="#90EE90", label="OutRet"];
  23 [shape=box, fillcolor="#6495ED", label="In(S_1_S_argv[0])"];
  24 [shape=box, fillcolor="#6495ED", label="In(S_argv[1])"];
  
  subgraph cluster_Call8 { style=filled;
    fillcolor="#B38B4D";
    label="Call8 : /*@ assert Value: mem_access: \\valid_read(argv+2); */\ny = atoi(*(argv + 2));";
    19;18; };
  subgraph cluster_Call7 { style=filled;
    fillcolor="#B38B4D";
    label="Call7 : /*@ assert Value: mem_access: \\valid_read(argv+1); */\nx = atoi(*(argv + 1));";
    16;15; };
  
  edge [dir=back];
  8 -> 7 [style=dotted, color="#000000"];
  7 -> 8 [style=dotted, color="#000000"];
  10 -> 9 [style=dotted, color="#000000"];
  9 -> 10 [style=dotted, color="#000000"];
  9 -> 15 [color="#0000FF"];
  10 -> 15 [color="#0000FF"];
  24 -> 15 [color="#0000FF"];
  11 -> 16 [style=dotted, color="#000000"];
  23 -> 16 [color="#0000FF"];
  9 -> 18 [color="#0000FF"];
  10 -> 18 [color="#0000FF"];
  12 -> 19 [style=dotted, color="#000000"];
  23 -> 19 [color="#0000FF"];
  11 -> 20 [color="#0000FF"];
  13 -> 21 [color="#0000FF"];
  
  }